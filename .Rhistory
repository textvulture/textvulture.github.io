)
imf <- "https://github.com/textvulture/textvulture.github.io/blob/master/images/imf-logo.png?raw=true"
wb <- "https://github.com/textvulture/textvulture.github.io/blob/master/images/worldbank-logo.jpeg?raw=true"
wto <- "https://github.com/textvulture/textvulture.github.io/blob/master/images/wto-logo.png?raw=true"
kbl(df, align='c') %>%
kable_classic(full_width = F)
column_spec(2, image = "kableExtra_sm.png")
kbl(df, align='c') %>%
kable_classic(full_width = F) %>%
column_spec(2, image = imf)
kbl(df, align='c') %>%
kable_classic(full_width = F) %>%
column_spec(2, image = spec_image(
c(imf, wb, wto)))
kbl(df, align='c') %>%
kable_classic(full_width = F) %>%
column_spec(2, image = spec_image(
c(imf, wb, wto), 50, 50))
kbl(df, align='c') %>%
kable_classic(full_width = F) %>%
column_spec(2, image = spec_image(
c(imf, wb, wto), 150, 150))
kbl(df, align='c') %>%
kable_classic(full_width = F) %>%
column_spec(2, image = spec_image(
c(imf, wb, wto), 250, 250))
wb <- "https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Logo_The_World_Bank.svg/2560px-Logo_The_World_Bank.svg.png"
kbl(df, align='c') %>%
kable_classic(full_width = F) %>%
column_spec(2, image = spec_image(
c(imf, wb, wto), 250, 250))
kbl(df, align='c') %>%
kable_paper("striped", full_width = F) %>%
column_spec(2, image = spec_image(
c(imf, wb, wto), 250, 250))
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
update.packages('fontawesome')
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
library(readxl)
read_excel('/Users/bson3/Library/CloudStorage/OneDrive-GeorgeMasonUniversity-O365Production/data_repo/GlobalTerrorismDataset/globalterrorismdb_0522dist.xlsx')
gtd <- read_excel('/Users/bson3/Library/CloudStorage/OneDrive-GeorgeMasonUniversity-O365Production/data_repo/GlobalTerrorismDataset/globalterrorismdb_0522dist.xlsx')
library(dplyr)
library(tidyr)
library(fs)
library(fontawesome)
# library(magick)
library(ggplot2)
gtd %>%
select(iyear)
gtd %>%
select(iyear) -> gtd
gtd <- read_excel('/Users/bson3/Library/CloudStorage/OneDrive-GeorgeMasonUniversity-O365Production/data_repo/GlobalTerrorismDataset/globalterrorismdb_0522dist.xlsx')
gtd %>%
select(iyear) -> gtd
gtd %>%
ggplot(aes(y=year)) +
geom_bar(stat = "count")
gtd %>%
ggplot(aes(x=year)) +
geom_bar(stat = "count")
gtd %>%
ggplot(aes(x=Year)) +
geom_bar(stat = "count")
gtd %>%
ggplot(aes(x=iyear)) +
geom_bar(stat = "count")
library(readxl)
gtd <- read_excel('/Users/bson3/Library/CloudStorage/OneDrive-GeorgeMasonUniversity-O365Production/data_repo/GlobalTerrorismDataset/globalterrorismdb_0522dist.xlsx')
gtd %>%
select(iyear, INT_LOG) -> gtd
gtd %>%
filter(INT_LOG != -9)
ggplot(aes(x=iyear, color=INT_LOG)) +
geom_bar(stat = "count")
gtd %>%
filter(INT_LOG != -9) %>%
ggplot(aes(x=iyear, color=INT_LOG)) +
geom_bar(stat = "count")
gtd %>%
filter(INT_LOG != -9) %>%
ggplot(aes(x=iyear, color=factor(INT_LOG))) +
geom_bar(stat = "count")
gtd %>%
filter(INT_LOG != -9) %>%
ggplot(aes(x=iyear, fill=factor(INT_LOG))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=25),
legend.title=element_text(size=20),
legend.text=element_text(size=20)) +
scale_color_manual(name = "Types",
labels = c("Domestic","International"))
gtd <- read_excel('/Users/bson3/Library/CloudStorage/OneDrive-GeorgeMasonUniversity-O365Production/data_repo/GlobalTerrorismDataset/globalterrorismdb_0522dist.xlsx')
gtd %>%
select(iyear, INT_ANY) -> gtd
gtd %>%
filter(INT_LOG != -9) %>%
ggplot(aes(x=iyear, fill=factor(INT_ANY))) +
geom_bar(stat = "count") +
theme_minimal() +
labs(y='year') +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=25),
legend.title=element_text(size=20),
legend.text=element_text(size=20))
gtd %>%
filter(INT_ANY != -9) %>%
ggplot(aes(x=iyear, fill=factor(INT_ANY))) +
geom_bar(stat = "count") +
theme_minimal() +
labs(y='year') +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=25),
legend.title=element_text(size=20),
legend.text=element_text(size=20))
gtd %>%
filter(INT_ANY != -9) %>%
ggplot(aes(x=iyear, fill=factor(INT_ANY))) +
geom_bar(stat = "count") +
theme_minimal() +
labs(x='year') +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=25),
legend.title=element_text(size=0),
legend.text=element_text(size=20)) +
scale_fill_manual(values = c("blue", "red"),
labels = c("domestic", "international")
)
gtd %>%
filter(INT_ANY != -9) %>%
ggplot(aes(x=iyear, fill=factor(INT_ANY))) +
geom_bar(stat = "count") +
theme_minimal() +
labs(x='year') +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=25),
legend.title=element_text(size=0),
legend.text=element_text(size=20),
legend.position = c(0.05, 0.95)) +
scale_fill_manual(values = c("blue", "red"),
labels = c("domestic", "international")
)
gtd %>%
filter(INT_ANY != -9) %>%
ggplot(aes(x=iyear, fill=factor(INT_ANY))) +
geom_bar(stat = "count") +
theme_minimal() +
labs(x='year') +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=25),
legend.title=element_text(size=0),
legend.text=element_text(size=20),
legend.position = c(0.1, 0.9)) +
scale_fill_manual(values = c("blue", "red"),
labels = c("domestic", "international")
)
gtd %>%
filter(INT_ANY != -9) %>%
ggplot(aes(x=iyear, fill=factor(INT_ANY))) +
geom_bar(stat = "count") +
theme_minimal() +
labs(x='year') +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=25),
legend.title=element_text(size=0),
legend.text=element_text(size=20),
legend.position = c(0.2, 0.9)) +
scale_fill_manual(values = c("blue", "red"),
labels = c("domestic", "international")
)
gtd %>%
filter(INT_ANY != -9) %>%
ggplot(aes(x=iyear, fill=factor(INT_ANY))) +
geom_bar(stat = "count") +
theme_minimal() +
labs(x='year') +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=25),
legend.title=element_text(size=0),
legend.text=element_text(size=20),
legend.position = c(0.2, 0.9)) +
scale_fill_manual(values = c("blue", "red"),
labels = c("domestic", "international")
)
gtd %>%
filter(INT_ANY != -9) %>%
ggplot(aes(x=iyear, fill=factor(INT_ANY)), alpha=0.75) +
geom_bar(stat = "count") +
theme_minimal() +
labs(x='year') +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=25),
legend.title=element_text(size=0),
legend.text=element_text(size=20),
legend.position = c(0.2, 0.9)) +
scale_fill_manual(values = c("blue", "red"),
labels = c("domestic", "international")
)
gtd %>%
filter(INT_ANY != -9) %>%
ggplot(aes(x=iyear, fill=factor(INT_ANY))) +
geom_bar(stat = "count", alpha=0.75) +
theme_minimal() +
labs(x='year') +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=25),
legend.title=element_text(size=0),
legend.text=element_text(size=20),
legend.position = c(0.2, 0.9)) +
scale_fill_manual(values = c("blue", "red"),
labels = c("domestic", "international")
)
gtd %>%
filter(INT_ANY != -9) %>%
ggplot(aes(x=iyear, fill=factor(INT_ANY))) +
geom_bar(stat = "count", alpha=0.5) +
theme_minimal() +
labs(x='year') +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=25),
legend.title=element_text(size=0),
legend.text=element_text(size=20),
legend.position = c(0.2, 0.9)) +
scale_fill_manual(values = c("blue", "red"),
labels = c("domestic", "international")
)
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
names(wdi)
wdi %>%
ggplot(aes(x=year,
y=malaria,
group=developed)) +
geom_point(aes(color=developed),
alpha=0.25, size=2) +
geom_smooth(aes(color=developed),
alpha=0.5,
se = F) +
ggplot(wdi %>%
filter(developed == 'Developed') %>%
filter(malaria > 200),
aes(x=year, y=malaria, label=country) +
geom_label() +
labs(x = "YEAR",
y = "HIV incidence") +
theme_minimal() +
theme(legend.title=element_text(size=0),
legend.text=element_text(size=25),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
legend.position = c(0.90, 0.90)) +
xlim(2000, 2020)
wdi %>%
ggplot(aes(x=year,
y=malaria,
group=developed)) +
geom_point(aes(color=developed),
alpha=0.25, size=2) +
geom_smooth(aes(color=developed),
alpha=0.5,
se = F) +
ggplot(data=wdi %>%
filter(developed == 'Developed') %>%
filter(malaria > 200),
aes(x=year, y=malaria, label=country)) +
geom_label() +
labs(x = "YEAR",
y = "HIV incidence") +
theme_minimal() +
theme(legend.title=element_text(size=0),
legend.text=element_text(size=25),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
legend.position = c(0.90, 0.90)) +
xlim(2000, 2020)
wdi %>%
ggplot(aes(x=year,
y=malaria,
group=developed)) +
geom_point(aes(color=developed),
alpha=0.25, size=2) +
geom_smooth(aes(color=developed),
alpha=0.5,
se = F) +
geom_label(data=wdi %>%
filter(developed == 'Developed') %>%
filter(malaria > 200),
aes(x=year, y=malaria, label=country)) +
labs(x = "YEAR",
y = "HIV incidence") +
theme_minimal() +
theme(legend.title=element_text(size=0),
legend.text=element_text(size=25),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
legend.position = c(0.90, 0.90)) +
xlim(2000, 2020)
wdi %>%
ggplot(aes(x=year,
y=malaria,
group=developed)) +
geom_point(aes(color=developed),
alpha=0.25, size=2) +
geom_smooth(aes(color=developed),
alpha=0.5,
se = F) +
geom_label(data=wdi %>%
filter(developed == 'Developed') %>%
filter(malaria > 350),
aes(x=year, y=malaria, label=country)) +
labs(x = "YEAR",
y = "HIV incidence") +
theme_minimal() +
theme(legend.title=element_text(size=0),
legend.text=element_text(size=25),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
legend.position = c(0.90, 0.90)) +
xlim(2000, 2020)
wdi %>%
ggplot(aes(x=year,
y=HIV,
group=developed)) +
geom_point(aes(color=developed),
alpha=0.25, size=2) +
geom_smooth(aes(color=developed),
alpha=0.5,
se = F) +
geom_label(aes(x=year, y=HIV, label=country), color='blue',
data=wdi %>% ) +
wdi %>%
ggplot(aes(x=year,
y=HIV,
group=developed)) +
geom_point(aes(color=developed),
alpha=0.25, size=2) +
geom_smooth(aes(color=developed),
alpha=0.5,
se = F) +
# geom_label(aes(x=year, y=HIV, label=country), color='blue',
#            data=wdi %>% ) +
labs(x = "YEAR",
y = "HIV incidence") +
theme_minimal() +
theme(legend.title=element_text(size=0),
legend.text=element_text(size=25),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
legend.position = c(0.90, 0.90)) +
xlim(1990, 2020)
wdi %>%
ggplot(aes(x=year,
y=HIV,
group=developed)) +
geom_point(aes(color=developed),
alpha=0.25, size=2) +
geom_smooth(aes(color=developed),
alpha=0.5,
se = F) +
geom_label(aes(x=year, y=HIV, label=country), color='blue',
data=wdi %>% filter(year==2000 & HIV>30) ) +
labs(x = "YEAR",
y = "HIV incidence") +
theme_minimal() +
theme(legend.title=element_text(size=0),
legend.text=element_text(size=25),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
legend.position = c(0.90, 0.90)) +
xlim(1990, 2020)
wdi %>%
ggplot(aes(x=year,
y=tuberculosis,
group=developed)) +
geom_point(aes(color=developed),
alpha=0.25, size=2) +
geom_smooth(aes(color=developed),
alpha=0.5,
se = F) +
geom_label(aes(x=year, y=HIV, label=country), color='blue',
data=wdi %>% filter(year==2000 & tuberculosis>1000) ) +
labs(x = "YEAR",
y = "HIV incidence") +
theme_minimal() +
theme(legend.title=element_text(size=0),
legend.text=element_text(size=25),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
legend.position = c(0.90, 0.90)) +
xlim(2000, 2020)
wdi %>%
ggplot(aes(x=year,
y=tuberculosis,
group=developed)) +
geom_point(aes(color=developed),
alpha=0.25, size=2) +
geom_smooth(aes(color=developed),
alpha=0.5,
se = F) +
geom_label(aes(x=year, y=HIV, label=country), color='blue',
data=wdi %>% filter(year==2010 & tuberculosis>1000) ) +
labs(x = "YEAR",
y = "HIV incidence") +
theme_minimal() +
theme(legend.title=element_text(size=0),
legend.text=element_text(size=25),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
legend.position = c(0.90, 0.90)) +
xlim(2000, 2020)
wdi %>%
ggplot(aes(x=year,
y=tuberculosis,
group=developed)) +
geom_point(aes(color=developed),
alpha=0.25, size=2) +
geom_smooth(aes(color=developed),
alpha=0.5,
se = F) +
geom_label(aes(x=year, y=tuberculosis, label=country), color='blue',
data=wdi %>% filter(year==2010 & tuberculosis>1000) ) +
labs(x = "YEAR",
y = "HIV incidence") +
theme_minimal() +
theme(legend.title=element_text(size=0),
legend.text=element_text(size=25),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
legend.position = c(0.90, 0.90)) +
xlim(2000, 2020)
xaringan::inf_mr()
quarto check?
quarto_check?
quarto install tool tinytex
rm(list=ls())
remotes::install_github("xmarquez/vdem")
3
xaringan::inf_mr()
update.packages('xaringan')
xaringan::inf_mr()
install.packages('xaringan')
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
install.packages('xaringan')
xaringan::inf_mr()
library(xaringan)
xaringan::inf_mr()
install.packages('xfun')
xaringan::inf_mr()
install.packages('DiagrammeR')
library(DiagrammeR)
# to use FontAwesome
#htmltools::tagList(rmarkdown::html_dependency_font_awesome())
library(fontawesome)
library(dplyr)
library(ggplot2)
library(tinytable)
library(modelsummary)
knitr::opts_chunk$set(warning = FALSE, message = FALSE, error=F, echo=F)
options(htmltools.preserve.raw = FALSE)
library(DiagrammeR)
nodes <- create_nodes(nodes = 1:7, type = "number")
readRDS('/Users/bson3/GitHub/bkv/data.rds')
readRDS("table_re2.rds")
readRDS("table_re2.rds")
readRDS("presentations/table_re2.rds")
xaringan::inf_mr()
xaringan::inf_mr()
htmltools::tagList(rmarkdown::html_dependency_font_awesome())
install.packages("fontawesome")
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
knitr::opts_chunk$set(warning = FALSE, message = FALSE, error=F, echo=F)
xaringan::inf_mr()
xaringan::inf_mr()
install.packages("qrcode")
xaringan::inf_mr()
# to use FontAwesome
#htmltools::tagList(rmarkdown::html_dependency_font_awesome())
library(fontawesome)
library(dplyr)
library(ggplot2)
library(tinytable)
library(modelsummary)
knitr::opts_chunk$set(warning = FALSE, message = FALSE, error=F, echo=F)
options(htmltools.preserve.raw = FALSE)
library(qrcode)
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
rm(list=ls())
