library(fontawesome)
# library(magick)
library(ggplot2)
library(tidyverse)
library(fontawesome)
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
View(wdi2)
y=air
)) +
geom_point(data=wdi2,
aes(color=Asia, size=lnGDPpc),
alpha=0.5) +
geom_point(data=wdi3, size=0.15, alpha=0.25, color='black') +
labs(x = "YEAR",
y = "Air Pollution (mg per cubic meter)") +
theme_minimal() +
theme(legend.title=element_text(size=15),
legend.text=element_text(size=15),
axis.text=element_text(size=15),
axis.title=element_text(size=15)) +
xlim(1990, 2020) +
ylim(0, 30)
ggplot(wdi2, aes(x=year,
y=air
)) +
geom_point(data=wdi2,
aes(color=Asia, size=lnGDPpc),
alpha=0.5) +
geom_point(data=wdi3, size=0.15, alpha=0.25, color='black') +
labs(x = "YEAR",
y = "Air Pollution (mg per cubic meter)") +
theme_minimal() +
theme(legend.title=element_text(size=15),
legend.text=element_text(size=15),
axis.text=element_text(size=15),
axis.title=element_text(size=15)) +
xlim(1990, 2020) +
ylim(0, 30)
ggplot(wdi2, aes(x=year,
y=air
)) +
geom_point(data=wdi2,
aes(color=Asia, size=lnGDPpc),
alpha=0.5) +
geom_point(data=wdi3, size=0.15, alpha=0.25, color='black') +
labs(x = "YEAR",
y = "Air Pollution (mg per cubic meter)") +
theme_minimal() +
theme(legend.title=element_text(size=15),
legend.text=element_text(size=15),
axis.text=element_text(size=15),
axis.title=element_text(size=15)) +
xlim(1990, 2020) +
ylim(0, 100)
summarize(wdi2$CO2)
summary(wdi2$CO2)
ggplot(wdi2, aes(x=year,
y=air
)) +
geom_point(data=wdi2,
aes(color=Asia, size=lnGDPpc),
alpha=0.5) +
geom_point(data=wdi3, size=0.15, alpha=0.25, color='black') +
labs(x = "YEAR",
y = "Air Pollution (mg per cubic meter)") +
theme_minimal() +
theme(legend.title=element_text(size=15),
legend.text=element_text(size=15),
axis.text=element_text(size=15),
axis.title=element_text(size=15))
ggplot(wdi2, aes(x=year,
y=air
)) +
geom_point(data=wdi2,
aes(color=Asia, size=lnGDPpc),
alpha=0.5) +
geom_point(data=wdi3, size=0.15, alpha=0.25, color='black') +
labs(x = "YEAR",
y = "Air Pollution (mg per cubic meter)") +
theme_minimal() +
theme(legend.title=element_text(size=15),
legend.text=element_text(size=15),
axis.text=element_text(size=15),
axis.title=element_text(size=15)) +
xlim(1989, 2020)
ggplot(wdi2, aes(x=year,
y=CO2
)) +
geom_point(data=wdi2, aes(color=Asia, size=lnGDPpc),
alpha=0.5) +
geom_point(data=wdi3, size=0.15, alpha=0.25, color='black') +
labs(x = "YEAR",
y = "Economic Cost of CO2 (% GNI)") +
theme_minimal() +
theme(legend.title=element_text(size=15),
legend.text=element_text(size=15),
axis.text=element_text(size=15),
axis.title=element_text(size=15))
ggplot(wdi2, aes(x=year,
y=CO2
)) +
geom_point(data=wdi2, aes(color=Asia, size=lnGDPpc),
alpha=0.5) +
geom_point(data=wdi3, size=0.15, alpha=0.25, color='black') +
labs(x = "YEAR",
y = "Economic Cost of CO2 (% GNI)") +
theme_minimal() +
theme(legend.title=element_text(size=15),
legend.text=element_text(size=15),
axis.text=element_text(size=15),
axis.title=element_text(size=15)) +
ylim(0, 25)
ggplot(wdi2, aes(x=year,
y=CO2
)) +
geom_point(data=wdi2, aes(color=Asia), size=2,
alpha=0.5) +
geom_point(data=wdi3, size=0.15, alpha=0.25, color='black') +
labs(x = "YEAR",
y = "Economic Cost of CO2 (% GNI)") +
theme_minimal() +
theme(legend.title=element_text(size=15),
legend.text=element_text(size=15),
axis.text=element_text(size=15),
axis.title=element_text(size=15)) +
ylim(0, 25)
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
oecd <- read.csv(file = "C:\Users\kalka\Google Drive\international political economy\Brookings\inequality project\OECD_HPI_2022-05-02.csv")
oecd <- read.csv(file = "C:\Users\kalka\Google Drive\international political economy\Brookings\inequality project\OECD_HPI_2022-05-02.csv")
k2013_2020 <- read_rds(file = "C:/Users/kalka/Google Drive/international political economy/Brookings/inequality project/k2013_2020.rds")
oecd <- read.csv(file = "C:\\Users\\kalka\\Google Drive\\international political economy\\Brookings\\inequality project\\OECD_HPI_2022-05-02.csv")
xaringan::inf_mr()
xaringan::inf_mr()
rm(ls=list())
rm(list=ls())
htmltools::tagList(rmarkdown::html_dependency_font_awesome())
library(fs)
library(fontawesome)
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
library(fontawesome)
update.packages('fontawesome')
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
<<<<<<< Updated upstream
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
install.package('flagon')
install.packages('flagon')
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
=======
>>>>>>> Stashed changes
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
update.packages('fontawesome')
update.packages('fontawesome')
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
install.packages('interplot')
load <- c("tm",
"reshape",
"ggplot2",
"wordcloud",
"pals",
"SnowballC",
"lda",
"dplyr",
"topicmodels",
"KoNLP", # should be installed separately.
"rJava",
"tidytext",
"tidylo",
"stringr",
"tidyr",
"stm",
"modelsummary",
"kableExtra",
"gt")
lapply(load, FUN = function(X) {
do.call("require", list(X))
}) # load the packages
library(MASS)
load <- c("tm",
"reshape",
"ggplot2",
"wordcloud",
"pals",
"SnowballC",
"lda",
"dplyr",
"topicmodels",
"KoNLP", # should be installed separately.
"rJava",
"tidytext",
"tidylo",
"stringr",
"tidyr",
"stm",
"modelsummary",
"kableExtra",
"gt")
lapply(load, FUN = function(X) {
do.call("require", list(X))
}) # load the packages
text_gamma2 <- readRDS("text_gamma2.rds")
text_gamma2 <- text_gamma2 %>%
mutate(nationalismD1 = ifelse(nationalismAll>0, 1, nationalismAll)) %>%
mutate(nationalismD2 = ifelse(nationalismAll3>0, 1, nationalismAll3)) %>%
mutate(fe = year*100 + month)
library(rstatix)
t_test(text_gamma2 %>%
mutate(outcome = log(agree+1)),
formula = outcome ~ nationalismD2)
text_gamma2 %>%
filter(nationalismD2==1) %>%
summarize(agree)
text_gamma2 %>%
filter(nationalismD2==1) %>%
summary(agree)
text_gamma2 %>%
filter(nationalismD2==1) %>%
summary(text_gamma$agree)
text_gamma2 %>%
group_by(nationalismD2) %>%
summarize(mean = mean(),
n = count())
text_gamma2 %>%
group_by(nationalismD2) %>%
summarize(mean = mean(),
n = n())
text_gamma2 %>%
group_by(nationalismD2) %>%
summarize(mean = mean(na.rm=T),
n = n())
group_by(text_gamma2, nationalismD2) %>%
summarize(mean = mean(na.rm=T),
n = n())
group_by(text_gamma2, nationalismD2) %>%
summarize(mean = mean(agree, na.rm=T),
n = n())
group_by(text_gamma2, nationalismD2) %>%
mutate(logagree = log(agree+1)) %>%
summarize(mean = mean(logagree, na.rm=T),
n = n())
t_test(text_gamma2 %>%
mutate(outcome = log(agree+1)),
formula = outcome ~ nationalismD2)
group_by(text_gamma2, nationalismD2) %>%
mutate(logagree = log(agree+1)) %>%
summarize(mean = mean(logagree, na.rm=T),
n = n()) #mean =
library(tidyverse)
library(rstatix)
t_test(text_gamma2 %>%
mutate(outcome = log(agree+1)),
formula = outcome ~ nationalismD2) # p-value = 0.000
text_gamma2 %>%
mutate(y = log(agree+1),
nationalism = as.character(nationalismD2)) %>%
ggplot(aes(x=y,
group=nationalism, color=nationalism, fill=nationalism,
alpha=0.5)) +
theme_minimal() +
geom_density() +
geom_vline(xintercept = 2.309,
linetype="longdash", alpha=0.5, color='red') +
geom_vline(xintercept = 2.660,
linetype="longdash", alpha=0.5, color='#00BFC4') +
labs(x="log(number of agreements + 1)") +
theme(legend.position = "none")
text_gamma2 %>%
mutate(y = log(agree+1),
nationalism = as.character(nationalismD2)) %>%
ggplot(aes(x=y,
group=nationalism, color=nationalism, fill=nationalism,
alpha=0.5)) +
theme_minimal() +
geom_density() +
geom_vline(xintercept = 2.309,
linetype="longdash", alpha=0.5, color='red', size=1.5) +
geom_vline(xintercept = 2.660,
linetype="longdash", alpha=0.5, color='#00BFC4', size=1.5) +
labs(x="log(number of agreements + 1)") +
theme(legend.position = "none")
text_gamma2 %>%
mutate(y = log(agree+1),
nationalism = as.character(nationalismD2)) %>%
ggplot(aes(x=y,
group=nationalism, color=nationalism, fill=nationalism,
alpha=0.5)) +
theme_minimal() +
geom_density() +
geom_vline(xintercept = 2.309,
linetype="longdash", alpha=0.5, color='red', size=1.25) +
geom_vline(xintercept = 2.660,
linetype="longdash", alpha=0.5, color='#00BFC4', size=1.25) +
annotate("text", x = 1.5, y = 0.5, label = "no nationalism") +
annotate("text", x = 3, y = 0.45, label = "nationalism") +
labs(x="log(number of agreements + 1)") +
theme(legend.position = "none")
text_gamma2 %>%
mutate(y = log(agree+1),
nationalism = as.character(nationalismD2)) %>%
ggplot(aes(x=y,
group=nationalism, color=nationalism, fill=nationalism,
alpha=0.5)) +
theme_minimal() +
geom_density() +
geom_vline(xintercept = 2.309,
linetype="longdash", alpha=0.5, color='red', size=1.25) +
geom_vline(xintercept = 2.660,
linetype="longdash", alpha=0.5, color='#00BFC4', size=1.25) +
annotate("text", x = 1.25, y = 0.5,
label = "no nationalism", color='red', alpha=0.5) +
annotate("text", x = 4.5, y = 0.45,
label = "nationalism", color='#00BFC4', alpha=0.5) +
labs(x="log(number of agreements + 1)") +
theme(legend.position = "none")
text_gamma2 %>%
mutate(y = log(agree+1),
nationalism = as.character(nationalismD2)) %>%
ggplot(aes(x=y,
group=nationalism, color=nationalism, fill=nationalism,
alpha=0.5)) +
theme_minimal() +
geom_density() +
geom_vline(xintercept = 2.309,
linetype="longdash", alpha=0.5, color='red', size=1.25) +
geom_vline(xintercept = 2.660,
linetype="longdash", alpha=0.5, color='#00BFC4', size=1.25) +
annotate("text", x = 1, y = 0.5,
label = "no nationalism", color='red', alpha=0.5) +
annotate("text", x = 4, y = 0.45,
label = "nationalism", color='#00BFC4', alpha=0.85) +
labs(x="log(number of agreements + 1)") +
theme(legend.position = "none")
text_gamma2 %>%
mutate(y = log(agree+1),
nationalism = as.character(nationalismD2)) %>%
ggplot(aes(x=y,
group=nationalism, color=nationalism, fill=nationalism,
alpha=0.5)) +
theme_minimal() +
geom_density() +
geom_vline(xintercept = 2.309,
linetype="longdash", alpha=0.5, color='red', size=1.25) +
geom_vline(xintercept = 2.660,
linetype="longdash", alpha=0.5, color='#00BFC4', size=1.25) +
annotate("text", x = 1, y = 0.5,
label = "no nationalism", color='red', alpha=0.5) +
annotate("text", x = 3.9, y = 0.45,
label = "nationalism", color='#00BFC4', alpha=0.85) +
labs(x="log(number of agreements + 1)") +
theme(legend.position = "none")
text_gamma2 %>%
mutate(y = log(agree+1),
nationalism = as.character(nationalismD2)) %>%
ggplot(aes(x=y,
group=nationalism, color=nationalism, fill=nationalism,
alpha=0.5)) +
theme_minimal() +
geom_density() +
geom_vline(xintercept = 2.309,
linetype="longdash", alpha=0.5, color='red', size=1.25) +
geom_vline(xintercept = 2.660,
linetype="longdash", alpha=0.5, color='#00BFC4', size=1.25) +
annotate("text", x = 1, y = 0.5,
label = "no nationalism", color='red', alpha=0.5) +
annotate("text", x = 3.9, y = 0.45,
label = "nationalism", color='#00BFC4', alpha=0.85) +
labs(x="log(number of agreements + 1)", y="density") +
theme(legend.position = "none")
rm(df, df2, wdi, wdi2, wdi3)
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
devtools::install_github("EmilHvitfeldt/xaringancolor")
library(xaringancolor)
xaringan::inf_mr()
xaringan::inf_mr()
rm(list=ls())
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
# to use FontAwesome
#htmltools::tagList(rmarkdown::html_dependency_font_awesome())
library(fontawesome)
library(ggplot2)
library(dplyr)
knitr::opts_chunk$set(warning = FALSE, message = FALSE, error=F, echo=F)
options(htmltools.preserve.raw = FALSE) # for fontawesome
library(WDI)
library(tidyverse)
library(WDI)
update.packages('WDI')
xaringan::inf_mr()
xaringan::inf_mr()
library(ggplot2)
library(dplyr)
wdi2 %>%
mutate(lnFDI = log(abs(FDI + 1))) %>%
mutate(lnFDI = ifelse(FDI<0, FDI*(-1), lnFDI)) %>%
ggplot(aes(year, lnFDI, color=developed)) +
geom_point(alpha=0.1,size=2) +
geom_smooth(alpha=0.25, size=3) +
labs(x="Year",
y="Gross FDI net inflow") +
theme(legend.title = element_blank()) +
scale_color_manual(values=c("red", "blue")) +
theme(legend.text = element_text(size=13),
axis.text=element_text(size=15),
axis.title=element_text(size=15))
wdi2 %>%
mutate(lnFDI = log(abs(FDI + 1))) %>%
mutate(lnFDI = ifelse(FDI<0, lnFDI*(-1), lnFDI)) %>%
ggplot(aes(year, lnFDI, color=developed)) +
geom_point(alpha=0.1,size=2) +
geom_smooth(alpha=0.25, size=3) +
labs(x="Year",
y="Gross FDI net inflow") +
theme(legend.title = element_blank()) +
scale_color_manual(values=c("red", "blue")) +
theme(legend.text = element_text(size=13),
axis.text=element_text(size=15),
axis.title=element_text(size=15))
wdi2 %>%
mutate(lnFDI = log2(abs(FDI + 1))) %>%
mutate(lnFDI = ifelse(FDI<0, lnFDI*(-1), lnFDI)) %>%
ggplot(aes(year, lnFDI, color=developed)) +
geom_point(alpha=0.1,size=2) +
geom_smooth(alpha=0.25, size=3) +
labs(x="Year",
y="Gross FDI net inflow") +
theme(legend.title = element_blank()) +
scale_color_manual(values=c("red", "blue")) +
theme(legend.text = element_text(size=13),
axis.text=element_text(size=15),
axis.title=element_text(size=15))
wdi2 %>%
mutate(lnFDI = log10(abs(FDI + 1))) %>%
mutate(lnFDI = ifelse(FDI<0, lnFDI*(-1), lnFDI)) %>%
ggplot(aes(year, lnFDI, color=developed)) +
geom_point(alpha=0.1,size=2) +
geom_smooth(alpha=0.25, size=3) +
labs(x="Year",
y="Gross FDI net inflow") +
theme(legend.title = element_blank()) +
scale_color_manual(values=c("red", "blue")) +
theme(legend.text = element_text(size=13),
axis.text=element_text(size=15),
axis.title=element_text(size=15))
wdi2 %>%
mutate(lnFDI = log10(abs(FDI + 1))) %>%
filter(FDI !=0) %>%
mutate(lnFDI = ifelse(FDI<0, lnFDI*(-1), lnFDI)) %>%
ggplot(aes(year, lnFDI, color=developed)) +
geom_point(alpha=0.1,size=2) +
geom_smooth(alpha=0.25, size=3) +
labs(x="Year",
y="Gross FDI net inflow") +
theme(legend.title = element_blank()) +
scale_color_manual(values=c("red", "blue")) +
theme(legend.text = element_text(size=13),
axis.text=element_text(size=15),
axis.title=element_text(size=15))
xaringan::inf_mr()
